pm
pm + geom_line()
pm <- ggplot(x)
pm + geom_line(x[-c(1:2),], aes(x=const, y = y, linetype = factor(col)))
pm + geom_line(data = x[-c(1:2),], aes(x=const, y = y, linetype = factor(col)))
p+geom_line(data = mydata[-c(1:(2*n)),], aes(y = F.D, x = trt.effect, linetype = factor(lty), size = factor(lty)))
p+geom_line(data = mydata[-c(1:(2*n)),], aes(y = F.D, x = trt.effect, linetype = factor(lty, levels =c(1:4))))
p+geom_line(data = mydata[-c(1:(2*n)),], aes(y = F.D, x = trt.effect, color = factor(lty, levels =c(1:4))))#, size = factor(lty)))
p+geom_line(data = mydata[-c(1:(2*n)),], aes(y = F.D, x = trt.effect, linetype = factor(lty, levels =c(1:4))))#, size = factor(lty)))
p+geom_line(data = mydata[-c(1:(2*n)),], aes(y = F.D, x = trt.effect, linetype = lty))
p+geom_line(data = mydata[-c(1:(2*n)),], aes(y = F.D, x = trt.effect, linetype = factor(lty)))
p+geom_line(data = mydata[-c(1:(2*n)),], aes(y = F.D, x = trt.effect, linetype = factor(lty)))+scale_linetype_discrete(values = c(3,4))
?scale_linetype_discrete
p+geom_line(data = mydata[-c(1:(2*n)),], aes(y = F.D, x = trt.effect, linetype = factor(lty)))+
scale_linetype_manual(breaks = c("3", "4"), values = c(3,4))
mydata[-c(1:(2*n)),]
subdat <- mydata[-c(1:(2*n)),]
subdat <- with(subdat, subdat[order(subdat$F.D),])
subdat
p+geom_line(data = subdat, aes(y = F.D, x = trt.effect, linetype = factor(lty)))+
scale_linetype_manual(breaks = c("3", "4"), values = c(3,4))#, size = factor(lty)))
tmp <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
bootstraps = 50, plot = TRUE, ci = "horizontal", conf.bands = TRUE)
tmp <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
bootstraps = 50, plot = TRUE, ci = "vertical", conf.bands = TRUE)
tmp <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
bootstraps = 50, plot = TRUE, ci = "vertical", conf.bands = TRUE,
fixed.values = c(-0.5, .1))
tmp <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
bootstraps = 50, plot = TRUE, ci = "vertical", conf.bands = TRUE,
fixed.values = c(0))
tmp <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
bootstraps = 50, plot = TRUE, ci = "horizontal", conf.bands = TRUE,
fixed.values = c(-0.5, .1))
library(TreatmentSelection)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "risk", ci = "vertical",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "risk", ci = "horizontal",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "cdf", ci = "vertical",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "cdf", ci = "horizontal",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "vertical",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "horizontal",
bootstraps = 50)
#cutoff
tmp <- plot.trtsel(trtsel.Y3, plot.type = "risk", ci = "vertical",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y3, plot.type = "risk", ci = "horizontal",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y3, plot.type = "treatment effect", ci = "vertical",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y3, plot.type = "treatment effect", ci = "horizontal",
bootstraps = 50)
tmp <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
bootstraps = 50, plot = TRUE, ci = "horizontal", conf.bands = TRUE,
)
library(TreatmentSelection)
library(TreatmentSelection)
library(TreatmentSelection)
library(TreatmentSelection)
library("TreatmentSelection")
data(tsdata)
trtsel.Y1 <- trtsel( event ="event", trt = "trt", marker = "Y1", data = tsdata,
study.design = "randomized cohort", link = "logit",
default.trt = "trt all")
trtsel.Y1
head(trtsel.Y1$derived.data) #shows data, along with fitted risks and estimated treatment effects
trtsel.Y1$model.fit  #information regarding the model fit
# "strong" marker
trtsel.Y2 <- trtsel( event ="event", trt = "trt", marker = "Y2", data = tsdata,
study.design = "randomized cohort", link = "logit",
default.trt = "trt none")
trtsel.Y2
tmp <- plot.trtsel(trtsel.Y1, main = "Y1: Oncotype-DX-like marker", plot.type = "risk", ci = "vertical",
conf.bands = FALSE, fixed.values = c(20, 50), bootstraps = 50,trt.names=c("chemo.","no chemo."))
?trtsel
tmp <- plot.trtsel(trtsel.Y1, plot.type = "risk", ci = "vertical",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "risk", ci = "horizontal",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "cdf", ci = "vertical",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "cdf", ci = "horizontal",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "vertical",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "horizontal",
bootstraps = 50)
library(TreatmentSelection)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "horizontal",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "horizontal",
bootstraps = 50)
library(TreatmentSelection)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "horizontal",
bootstraps = 50)
head(mydata)
avglines <- cbind(0, sort(F.D), 4)
avglines <- rbind(avglines, cbind(mean(event[trt==0])-mean(event[trt==1]), sort(F.D), 3))
avglines = data.frame(avglines); names(avglines) = names(mydata)
mydata <- rbind(mydata, avglines)
mydat
dim(mydata)
if(!markerTWO){
cen <- mean(c(min(trt.effect, na.rm=TRUE), max(trt.effect, na.rm=TRUE)))
ran <- max(trt.effect, na.rm=TRUE) - min(trt.effect, na.rm=TRUE)
if(substr(ci, 1,1) =="v"){ cen <- mean(c(min(c(trt.effect, ci.bounds), na.rm=TRUE), max(c(trt.effect, ci.bounds), na.rm=TRUE))); ran <- max(c(trt.effect, ci.bounds), na.rm=TRUE) - min(c(trt.effect, ci.bounds), na.rm=TRUE)}
ran <- ran*1.1
mylim <- c(cen-ran/2, cen+ran/2)
if(is.null(xlab)) xlab <- "% population below treatment effect"
if(is.null(ylab)) ylab <- "treatment effect"
if(is.null(xlim)) xlim <- c(0,100)
if(is.null(ylim)) ylim <- mylim
if(is.null(main)) main <- "Treatment effect distribution"
p <- ggplot()
if(substr(ci, 1,1) =="h"){
p <- p + coord_flip()
#add x/y labels and main
p <- p + ylab(xlab) + xlab(ylab) + xlim(ylim[1], ylim[2]) + ggtitle(main)
#add vlines
#tmpdat <- data.frame( value = c(0, mean(event[trt==0])-mean(event[trt==1])), line = c(4, 3))
#  p <- p + stat_vline(xintercept  = mean(trt.effect), aes(linetype = factor(3)))+
#     stat_vline(xintercept = 0, aes( linetype = factor(4))) + scale_linetype_manual(name = "Treatment Effect", breaks = c("3", "4"), values = c(3, 4), labels = c("Mean", "Zero"))
#p + scale_linetype_discrete(breaks = c("3", "4"), labels = c("a", "b"))
#add the legend, increase text size
p <- p + theme( text = element_text(size=18))
p <- p + scale_y_continuous(limits = xlim)
}else{
#add x/y labels and main
p <- p + xlab(xlab) + ylab(ylab) + ylim(ylim[1], ylim[2])+ ggtitle(main)
#change the names for the legend
#   p <- p + stat_hline(yintercept  = mean(trt.effect), aes(linetype = factor(3)))+
#     stat_hline(yintercept = 0, aes( linetype = factor(4))) + scale_linetype_manual(name = "Treatment Effect",breaks = c("3", "4"), values = c(3, 4), labels = c("Mean", "Zero"))
p <- p + theme( text = element_text(size=18)) #,
p <- p + scale_x_continuous(limits = xlim)
}
}
p
if(!is.null(ci.bounds)){
ci.bounds <- matrix(ci.bounds, ncol=length(fixed.values), nrow = 2)
if(substr(ci, 1,1)=="v"){
index.fix  <- (fixed.values<= max(F.D) & fixed.values >= min(F.D))
width = 5
}else{
width = .05
index.fix  <- (fixed.values<= max(trt.effect) & fixed.values >= min(trt.effect))
}
p <- shade_gg(p, ci.bounds[,index.fix], fixed.values[index.fix], type = substr(ci, 1, 1), bands = conf.bands, lty, width = width)
}
p
p <- p+geom_step(data = mydata[(1:(2*n)),], aes(y = F.D, x = trt.effect, linetype = factor(lty)), direction = "hv")
p <- p+geom_line(data = mydata[-c(1:(2*n)),], aes(y = F.D, x = trt.effect, linetype = factor(lty)))
p
p <- p+ scale_linetype_manual(name = "Treatment Effect", breaks = c("1", "3", "4"), values = c(32, 3, 4), labels = c("","Mean", "Zero"))
p
library(TreatmentSelection)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "horizontal",
bootstraps = 50)
p
head(mydata)
p <- p+ scale_linetype_manual(name = "Treatment Effect", breaks = c( "3", "4"), values = c( 3, 4), labels = c("Mean", "Zero"))
p
mydata[-c(1:(2*n)),]
summary(mydata[-c(1:(2*n)),]
)
table(mydata$lty)
n
print(n)
p <- p+geom_step(data = mydata[(1:(n)),], aes(y = F.D, x = trt.effect), size = 1, direction = "hv")
p <- p+geom_line(data = mydata[-c(1:(n)),], aes(y = F.D, x = trt.effect, linetype = factor(lty)))
p <- p+ scale_linetype_manual(name = "Treatment Effect", breaks = c( "3", "4"), values = c( 3, 4), labels = c("Mean", "Zero"))
p
library(TreatmentSelection)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "horizontal",
bootstraps = 50)
p
p <- p+ scale_linetype_manual(name = "Treatment Effect", breaks = c( "3", "4"), values = c( 3, 4), labels = c("Mean", "Zero"))
p
library(TreatmentSelection)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "horizontal",
bootstraps = 50)
p
p
library(TreatmentSelection)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "horizontal",
bootstraps = 50)
p
p <- p+geom_step(data = mydata[(1:(n)),], aes(y = F.D, x = trt.effect), size = 1, direction = "hv")
p <- p+geom_line(data = mydata[-c(1:(n)),], aes(y = F.D, x = trt.effect, linetype = factor(lty)), size = 0.5)
p
p <- p+ scale_linetype_manual(name = "Treatment Effect", breaks = c( "3", "4"), values = c( 3, 4), labels = c("Mean", "Zero"))
p
library(TreatmentSelection)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "vertical",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "horizontal",
bootstraps = 50)
library(TreatmentSelection)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "vertical",
bootstraps = 50)
tmp$plot + theme_bw()
tmp <- plot.trtsel(trtsel.Y1, plot.type = "risk", ci = "vertical",
bootstraps = 50)
tmp$plot + theme_bw()
tmp$plot
tmp$plot + theme_grey()
tmp$plot + theme_grey() + scale_linetype_discrete("")
tmp$plot + theme_grey() + scale_linetype_discrete("", labels = c("trt", "no trt"))
tmp$plot + theme_grey() + scale_linetype_discrete("", labels = c("trt", "no trt")) + xlim(25, 50)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "risk", ci = "vertical",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "risk", ci = "horizontal",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "cdf", ci = "vertical",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "cdf", ci = "horizontal",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "vertical",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "horizontal",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y3, plot.type = "risk", ci = "vertical",
bootstraps = 50)
trtsel.Y3 <- trtsel( event ="event", trt = "trt", marker = "Y2_disc", data = tsdata[1:100,],
study.design = "randomized cohort", link = "logit",
default.trt = "trt all")
tmp <- plot.trtsel(trtsel.Y3, plot.type = "risk", ci = "vertical",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y3, plot.type = "risk", ci = "horizontal",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y3, plot.type = "treatment effect", ci = "vertical",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y4, plot.type = "treatment effect", ci = "horizontal",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y3, plot.type = "treatment effect", ci = "horizontal",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "risk", ci = "vertical",
bootstraps = 50, conf.bands = FALSE)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "risk", ci = "horizontal",
bootstraps = 50, conf.bands = FALSE)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "cdf", ci = "vertical",
bootstraps = 50, conf.bands = FALSE)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "cdf", ci = "horizontal",
bootstraps = 50, conf.bands = FALSE)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "vertical",
bootstraps = 50, conf.bands = FALSE)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "horizontal",
bootstraps = 50, conf.bands = FALSE)
tmp <- plot.trtsel(trtsel.Y3, plot.type = "risk", ci = "vertical",
bootstraps = 50, conf.bands = FALSE)
library(TreatmentSelection)
tmp <- plot.trtsel(trtsel.Y3, plot.type = "risk", ci = "vertical",
bootstraps = 50, conf.bands = FALSE)
tmp <- plot.trtsel(trtsel.Y3, plot.type = "risk", ci = "horizontal",
bootstraps = 50, conf.bands = FALSE)
tmp <- plot.trtsel(trtsel.Y3, plot.type = "treatment effect", ci = "vertical",
bootstraps = 50, conf.bands = FALSE)
tmp <- plot.trtsel(trtsel.Y3, plot.type = "treatment effect", ci = "horizontal",
bootstraps = 50, conf.bands = FALSE)
library(TreatmentSelection)
tmp <- plot.trtsel(trtsel.Y3, plot.type = "treatment effect", ci = "vertical",
bootstraps = 50, conf.bands = FALSE)
tmp <- plot.trtsel(trtsel.Y3, plot.type = "treatment effect", ci = "horizontal",
bootstraps = 50, conf.bands = FALSE)
library(TreatmentSelection)
tmp <- plot.trtsel(trtsel.Y3, plot.type = "treatment effect", ci = "vertical",
bootstraps = 50, conf.bands = FALSE)
library(TreatmentSelection)
tmp <- plot.trtsel(trtsel.Y3, plot.type = "treatment effect", ci = "vertical",
bootstraps = 50, conf.bands = FALSE)
tmp <- plot.trtsel(trtsel.Y3, plot.type = "treatment effect", ci = "horizontal",
bootstraps = 50, conf.bands = FALSE)
tmp <- evaluate.trtsel(trtsel.Y1)
tmp <- eval.trtsel(trtsel.Y1)
tmp <- eval.trtsel(trtsel.Y1, bootstraps = 50)
tmp
tmp$estimates
eval.trtsel(trtsel.Y2_disc, bootstraps = 50)
eval.trtsel(trtsel.Y2_disc, bootstraps = 50)
trtsel.Y2_disc <- trtsel( event = "event", trt = "trt", marker = "Y2_disc", data = tsdata, study.design = "randomized cohort", link = "logit")
```
eval.trtsel(trtsel.Y2_disc, bootstraps = 50)
calibrate.trtsel(trtsel.Y1, groups = 10, plot = "calibration")
trtsel.Y2 <- trtsel( event = "event", trt = "trt", marker = "Y1", data = tsdata)
compare.trtsel(trtsel.Y1, trtsel.Y2, bootstraps = 50)
compare.trtsel(trtsel.Y1, trtsel.Y2, bootstraps = 50, ci = "horizontal")
trtsel.Y1_disc <- trtsel( event = "event", trt = "trt", marker = "Y2_disc", data = tsdata, study.design = "randomized cohort", link = "logit")
mycompare <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
marker.names = c("Weak", "Strong"),
bootstraps = 50, plot = TRUE, fixed.values = c(.05),
ci = "vertical", offset = .01, conf.bands = TRUE)
mycompare <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
marker.names = c("Weak", "Strong"),
bootstraps = 50, plot = TRUE, fixed.values = c(50),
ci = "vertical", offset = .01, conf.bands = TRUE)
mycompare <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
marker.names = c("Weak", "Strong"),
bootstraps = 50, plot = TRUE, fixed.values = c(50, 75),
ci = "vertical", offset = .01, conf.bands = TRUE)
mycompare
mycompare$estimates.marker1 #estimates from trtsel1
mycompare$estimates.marker2
mycompare$ci.marker1
compare.trtsel(trtsel1 = trtsel.Y1_disc, trtsel2 = trtsel.Y2_disc,
bootstraps = 50, plot = TRUE,
ci = "vertical", offset = .01, conf.bands = TRUE)
compare.trtsel(trtsel1 = trtsel.Y1_disc, trtsel2 = trtsel.Y2_disc,
bootstraps = 50, plot = TRUE,
ci = "vertical", offset = 5, conf.bands = TRUE)
compare.trtsel(trtsel1 = trtsel.Y1_disc, trtsel2 = trtsel.Y2_disc,
bootstraps = 50, plot = TRUE,
ci = "vertical", offset = .2, conf.bands = TRUE)
trtsel.Y1_disc <- trtsel( event = "event", trt = "trt", marker = "Y1_disc", data = tsdata, study.design = "randomized cohort", link = "logit")
compare.trtsel(trtsel1 = trtsel.Y1_disc, trtsel2 = trtsel.Y2_disc,
bootstraps = 50, plot = TRUE,
ci = "vertical", offset = .2, conf.bands = TRUE)
compare.trtsel(trtsel1 = trtsel.Y1_disc, trtsel2 = trtsel.Y2_disc,
bootstraps = 50, plot = TRUE,
ci = "vertical", conf.bands = TRUE)
library(TreatmentSelection)
compare.trtsel(trtsel1 = trtsel.Y1_disc, trtsel2 = trtsel.Y2_disc,
bootstraps = 50, plot = TRUE, conf.bands = TRUE)
compare.trtsel(trtsel1 = trtsel.Y1_disc, trtsel2 = trtsel.Y2_disc, offset = 0.2,
bootstraps = 50, plot = TRUE, conf.bands = TRUE)
compare.trtsel(trtsel1 = trtsel.Y1_disc, trtsel2 = trtsel.Y2_disc, offset = 0.4,
bootstraps = 50, plot = TRUE, conf.bands = TRUE)
library(TreatmentSelection)
compare.trtsel(trtsel1 = trtsel.Y1_disc, trtsel2 = trtsel.Y2_disc, offset = 0.2,
bootstraps = 50, plot = TRUE, conf.bands = TRUE)
compare.trtsel(trtsel1 = trtsel.Y1_disc, trtsel2 = trtsel.Y2_disc, offset = 0.2,
bootstraps = 50, plot = TRUE, conf.bands = TRUE,
annotate.plot = FALSE)
compare.trtsel(trtsel1 = trtsel.Y1_disc, trtsel2 = trtsel.Y2_disc,
ci = "vertical", offset = 0.2,
bootstraps = 50, plot = TRUE, conf.bands = TRUE,
annotate.plot = FALSE)
eval.trtsel(trtsel.Y2_disc, bootstraps = 50)
plot.trtsel(trtsel.Y1, main = "Y1: Oncotype-DX-like marker", plot.type = "risk", ci = "horizontal",
conf.bands = TRUE, bootstraps = 50,trt.names=c("chemo.","no chemo."))
calibrate.trtsel(trtsel.Y1, groups = 10, plot = "calibration",trt.names=c("chemo.","no chemo."))
trtsel.Y2 <- trtsel( event = "event", trt = "trt", marker = "Y1", data = tsdata, default.trt = "trt none")
# Compare the markers based on summary measures
mycompare <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
marker.names = c("Weak", "Strong"),
bootstraps = 50, plot = TRUE, fixed.values = c(50, 75),
ci = "vertical", offset = .01, conf.bands = TRUE)
mycompare
mycompare <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
marker.names = c("Weak", "Strong"),
bootstraps = 50, plot = TRUE, fixed.values = c(50),
ci = "vertical", offset = .01, conf.bands = TRUE)
mycompare <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
marker.names = c("Weak", "Strong"),
bootstraps = 50, plot = TRUE, fixed.values = c(-100, 105),
ci = "vertical", offset = .01, conf.bands = TRUE)
mycompare <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
marker.names = c("Weak", "Strong"),
bootstraps = 50, plot = TRUE, fixed.values = c(-100),
ci = "vertical", offset = .01, conf.bands = TRUE)
mycompare
eval.trtsel(trsel.Y2, bootstraps = 10)
eval.trtsel(trtsel.Y2, bootstraps = 10)
plot.trtsel(trtsel.Y2, bootstraps = 10)
trtsel.Y2 <- trtsel( event = "event", trt = "trt", marker = "Y2", data = tsdata, default.trt = "")
trtsel.Y2 <- trtsel( event = "event", trt = "trt", marker = "Y2", data = tsdata, default.trt = "trt none")
# Compare the markers based on summary measures
mycompare <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
marker.names = c("Weak", "Strong"),
bootstraps = 50, plot = TRUE, fixed.values = c(-100),
ci = "vertical", offset = .01, conf.bands = TRUE)
mycompare <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
marker.names = c("Weak", "Strong"),
bootstraps = 50, plot = TRUE,
ci = "vertical", offset = .01, conf.bands = TRUE)
mycompare
eval.trtsel(trtsel.Y2, bootstraps = 10)
trtsel.Y2$derived.data
any(trtsel.Y2$derived.data$marker.neg==0)
trtsel.Y2$derived.data$marker.neg==0
names(trtsel.Y2$derived.data)
all.equal(names(trtsel.Y2$derived.data), names(trtsel.Y1$derived.data))
!all.equal(names(trtsel.Y2$derived.data), names(trtsel.Y1$derived.data))
names(trtsel.Y2$derived.data)==names(trtsel.Y1$derived.data)
all(names(trtsel.Y2$derived.data)==names(trtsel.Y1$derived.data)
)
gc()
tmp <- plot.trtsel(trtsel.Y1, plot.type = "risk", ci = "vertical",
bootstraps = 50)
library(TreatmentSelection)
eval.trtsel(trtsel.Y2, bootstraps = 10)
trtsel.Y2 <- trtsel( event = "event", trt = "trt", marker = "Y2", data = tsdata, default.trt = "trt all")
eval.trtsel(trtsel.Y2, bootstraps = 10)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "risk", ci = "vertical",
bootstraps = 50)
tmp <- plot.trtsel(trtsel.Y1, plot.type = "risk", ci = "vertical",
bootstraps = 50, fixed.value = c(50))
tmp <- plot.trtsel(trtsel.Y1, plot.type = "risk", ci = "horizontal",
bootstraps = 50, , fixed.value = c(.50))
tmp <- plot.trtsel(trtsel.Y1, plot.type = "cdf", ci = "vertical",
bootstraps = 50, fixed.value = c(.50))
bootstraps = 50, fixed.value = c(50))
tmp <- plot.trtsel(trtsel.Y1, plot.type = "cdf", ci = "vertical",
bootstraps = 50, fixed.value = c(50))
tmp <- plot.trtsel(trtsel.Y1, plot.type = "cdf", ci = "vertical",
bootstraps = 50, fixed.value = c(.1))
tmp <- plot.trtsel(trtsel.Y1, plot.type = "cdf", ci = "horizontal",
bootstraps = 50, fixed.value = c(50))
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "horizontal",
bootstraps = 50, fixed.value = c(50))
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "horizontal",
bootstraps = 50, fixed.value = c(.10))
tmp <- plot.trtsel(trtsel.Y1, plot.type = "treatment effect", ci = "vertical",
bootstraps = 50, fixed.value = c(50))
library(TreatmentSelection)
trtsel.Y2 <- trtsel( event = "event", trt = "trt", marker = "Y2", data = tsdata, default.trt = "trt none")
# Compare the markers based on summary measures
mycompare <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
marker.names = c("Weak", "Strong"),
bootstraps = 50, plot = TRUE,
ci = "vertical", offset = .01, conf.bands = TRUE)
library(TreatmentSelection)
mycompare <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
marker.names = c("Weak", "Strong"),
bootstraps = 50, plot = TRUE,
ci = "vertical", offset = .01, conf.bands = TRUE)
trtsel.Y2 <- trtsel( event = "event", trt = "trt", marker = "Y2", data = tsdata, default.trt = "trt all")
# Compare the markers based on summary measures
mycompare <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
marker.names = c("Weak", "Strong"),
bootstraps = 50, plot = TRUE,
ci = "vertical", offset = .01, conf.bands = TRUE)
Q
mycompare <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
marker.names = c("Weak", "Strong"),
bootstraps = 50, plot = TRUE, fixed.values= 50,
ci = "vertical", offset = .01, conf.bands = TRUE)
mycompare <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
marker.names = c("Weak", "Strong"),
bootstraps = 50, plot = TRUE, fixed.values= 50,
ci = "vertical", offset = .01, conf.bands = TRUE)
fixed.values1 <- fixed.values[1,]
fixed.values2 <- fixed.values[2,]
if(substr(ci, 1,1)=="v"){
index.fix1  <- (fixed.values1<= max(F.D) & fixed.values1 >= min(F.D))
index.fix2 <- (fixed.values2<= max(F.D2) & fixed.values2 >= min(F.D2))
width = 5
}else{
index.fix1  <- (fixed.values1<= max(trt.effect) & fixed.values1 >= min(trt.effect))
index.fix2  <- (fixed.values2<= max(trt.effect2) & fixed.values2 >= min(trt.effect2))
width = .05
}
p <- shade_gg(p, ci.bounds[1:2,index.fix1], fixed.values1[index.fix1], type = substr(ci, 1, 1), bands = conf.bands, lty=1, width = width)
p <- shade_gg(p, ci.bounds[3:4,index.fix2], fixed.values2[index.fix2], type = substr(ci, 1, 1), bands = conf.bands, lty=2, width = width)
}
index.fix1  <- (fixed.values1<= max(F.D) & fixed.values1 >= min(F.D))
index.fix2 <- (fixed.values2<= max(F.D2) & fixed.values2 >= min(F.D2))
width = 5
index.fix1
index.fix2
length(index.fix)
length(index.fix1)
length(index.fix2)
ci.bounds[1:2,index.fix1]
ci.bounds[3:4,index.fix2]
ci.bounds
Q
mycompare <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
marker.names = c("Weak", "Strong"),
bootstraps = 50, plot = TRUE, fixed.values= c(50, 75),
ci = "vertical", offset = .01, conf.bands = TRUE)
ci.bounds
length(fixed.values)
fixed.values
Q
library(TreatmentSelection)
mycompare <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
marker.names = c("Weak", "Strong"),
bootstraps = 50, plot = TRUE, fixed.values= c(50),
ci = "vertical", offset = .01, conf.bands = TRUE)
bounds.delta.y1
bounds.delta.y2
bounds.delta.y1 = t(bounds.delta.y1)
bounds.delta.y2 = t(bounds.delta.y2)
bounds.delta.y2
rbind(bounds.delta.y1, bounds.delta.y2)
bounds.delta.y1 = t(bounds.delta.y1)
bounds.delta.y2 = t(bounds.delta.y2)
rbind(bounds.delta.y1, bounds.delta.y2)
bounds.delta.y1<- quantile(boot.dat[1,,], probs = c(alpha/2, 1-alpha/2), na.rm = TRUE)
bounds.delta.y2<- quantile(boot.dat[2,,], probs = c(alpha/2, 1-alpha/2), na.rm = TRUE)
rbind(bounds.delta.y1, bounds.delta.y2)
rbind(c(bounds.delta.y1), c(bounds.delta.y2))
rbind(t(bounds.delta.y1), t(bounds.delta.y2))
rbind(t(t(bounds.delta.y1)), t(t(bounds.delta.y2))
)
library(TreatmentSelection)
mycompare <- compare.trtsel(trtsel1 = trtsel.Y1, trtsel2 = trtsel.Y2,
marker.names = c("Weak", "Strong"),
bootstraps = 50, plot = TRUE, fixed.values= c(50),
ci = "vertical", offset = .01, conf.bands = TRUE)
library(TreatmentSelection)
myplot <- plot.trtsel(trtsel.Y1, main = "Y1: Oncotype-DX-like marker", plot.type = "risk",
ci = "horizontal", conf.bands = TRUE, bootstraps = 50,
trt.names=c("chemo.","no chemo."))
if (!require("devtools")) install.packages("devtools")
devtools::install_github("TreatmentSelection", "mdbrown")
install.packages("TreatmentSelection_1.3.tar.gz")
library(TreatmentSelection)
?plot.trtsel
